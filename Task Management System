import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Scanner;

class Task {
    private String description;
    private Date dueDate;
    private int priority;

    public Task(String description, Date dueDate, int priority) {
        this.description = description;
        this.dueDate = dueDate;
        this.priority = priority;
    }

    public String getDescription() {
        return description;
    }

    public Date getDueDate() {
        return dueDate;
    }

    public int getPriority() {
        return priority;
    }
    public String toString() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        return "Task: " + description + ", Due Date: " + dateFormat.format(dueDate) + ", Priority: " + priority;
    }
}

public class TaskManager {
    private ArrayList<Task> tasks;

    public TaskManager() {
        tasks = new ArrayList<>();
    }

    public void addTask(String description, Date dueDate, int priority) {
        Task newTask = new Task(description, dueDate, priority);
        tasks.add(newTask);
        sortTasks();
        System.out.println("Task added successfully.");
    }

    public void displayTasks() {
        if (tasks.isEmpty()) {
            System.out.println("No tasks available.");
        } 
        else {
            for (Task task : tasks) {
                System.out.println(task);
            }
        }
    }

    private void sortTasks() {
        Collections.sort(tasks, Comparator.comparing(Task::getDueDate).thenComparing(Task::getPriority));
    }

    public static void main(String[] args) {
        TaskManager taskManager = new TaskManager();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\nTask Manager Menu:");
            System.out.println("1. Add Task");
            System.out.println("2. Display Tasks");
            System.out.println("3. Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    System.out.print("Enter task description: ");
                    String description = scanner.nextLine();
                    System.out.print("Enter due date (yyyy-MM-dd HH:mm:ss): ");
                    String dueDateString = scanner.nextLine();
                    System.out.print("Enter priority (1-5): ");
                    int priority = scanner.nextInt();
                    try {
                        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                        Date dueDate = dateFormat.parse(dueDateString);
                        taskManager.addTask(description, dueDate, priority);
                    } catch (Exception e) {
                        System.out.println("Invalid date format. Please use yyyy-MM-dd HH:mm:ss.");
                    }
                    break;

                case 2:
                    taskManager.displayTasks();
                    break;

                case 3:
                    System.out.println("Exiting Task Manager. Goodbye!");
                    System.exit(0);

                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
            }
        }
    }
}
